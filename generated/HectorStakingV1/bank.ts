// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class bank__viewLendingNetworkResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class bank extends ethereum.SmartContract {
  static bind(address: Address): bank {
    return new bank("bank", address);
  }

  viewLendingNetwork(unitroller: Address): bank__viewLendingNetworkResult {
    let result = super.call(
      "viewLendingNetwork",
      "viewLendingNetwork(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(unitroller)]
    );

    return new bank__viewLendingNetworkResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_viewLendingNetwork(
    unitroller: Address
  ): ethereum.CallResult<bank__viewLendingNetworkResult> {
    let result = super.tryCall(
      "viewLendingNetwork",
      "viewLendingNetwork(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(unitroller)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new bank__viewLendingNetworkResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }
}
